subplot(barcharts, margin = 0.01) %>%
subplot(map, nrows = 2, heights = c(0.3, 0.7), margin = 0.1) %>%
layout(legend = list(y = 1)) %>%
colorbar(y = 0.5)
library(dplyr)
dims <- select_if(iris, is.numeric())
dims <- select_if(iris, is.numeric)
dims
library(purrr)
dims <- map2(dims, names(dims), ~list(values=.x, label =.y))
dims
class(dims)
class(dims[1])
class(dims[2])
length(dims)
plot_ly(
type = "splom", dimensions = setNames(dims, NULL),
showupperhalf = FALSE, diagonal = list(visible = FALSE)
)
rm(list = ls())
df.mel <- read.csv("./Data/melb_data.csv")
df.mel <- df.mel[which(!is.na(df.mel$Lattitude) &
!is.na(df.mel$Price) &
!is.na(df.mel$Bathroom)),]
# df1_FULL <- df1_FULL[which(!is.na(df1_FULL$Lattitude) &
#                                !is.na(df1_FULL$Price) &
#                                !is.na(df1_FULL$Bathroom)),]
df.mel$PriceCategory <-cut(df.mel$Price,
breaks = quantile(df.mel$Price),
labels = c("low", "medium low", "medium high", "high"))
df.mel$MarkerColor <-cut(df.mel$Price,
breaks = quantile(df.mel$Price),
labels = c("darkgreen", "green", "red", "darkred"))
df.mel$HoverText <- with(df.mel, paste('<b>Price:</b>', Price,
'<br>', "Council: ", CouncilArea,
'<br>', "Region: ", Regionname,
'<br>', "Number of Rooms", Rooms,
'<br>', "Type", Type))
library(plotly)
library(dplyr)
library(ggplot2)
library(plotly)
rm(list = ls())
df.mel <- read.csv("./Data/Melbourne_housing_FULL.csv")
df.mel <- df.mel[which(!is.na(df.mel$Lattitude) &
!is.na(df.mel$Price) &
!is.na(df.mel$Bathroom)),]
df.mel$PriceCategory <-cut(df.mel$Price,
breaks = quantile(df.mel$Price),
labels = c("low", "medium low", "medium high", "high"))
df.mel$MarkerColor <-cut(df.mel$Price,
breaks = quantile(df.mel$Price),
labels = c("darkgreen", "green", "red", "darkred"))
df.mel$HoverText <- with(df.mel, paste('<b>Price:</b>', Price,
'<br>', "Council: ", CouncilArea,
'<br>', "Region: ", Regionname,
'<br>', "Number of Rooms", Rooms,
'<br>', "Type", Type))
p <- plot_ly(df.mel, type = "scattermapbox") %>%
add_trace(lat = filter(df.mel, PriceCategory == "low")$Lattitude,
lon = filter(df.mel, PriceCategory == "low")$Longtitude,
color = "Low Price",
marker = list(color = "darkgreen"),
hoverinfo = "text",
hovertext = filter(df.mel, PriceCategory == "low")$HoverText,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
)
p
p <- plot_ly(df.mel, type = "scattermapbox") %>%
add_trace(lat = filter(df.mel, PriceCategory == "high")$Lattitude,
lon = filter(df.mel, PriceCategory == "high")$Longtitude,
color = "Low Price",
marker = list(color = "darkgreen"),
hoverinfo = "text",
hovertext = filter(df.mel, PriceCategory == "low")$HoverText,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
)
p
p <- plot_ly(df.mel, type = "scattermapbox") %>%
add_trace(lat = filter(df.mel, PriceCategory == "high")$Lattitude,
lon = filter(df.mel, PriceCategory == "high")$Longtitude,
color = "Low Price",
marker = list(color = "darkgreen"),
hoverinfo = "text",
hovertext = filter(df.mel, PriceCategory == "high")$HoverText,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
)
p
p <- plot_ly(df.mel, type = "scattermapbox") %>%
add_trace(lat = filter(df.mel, PriceCategory == "low")$Lattitude,
lon = filter(df.mel, PriceCategory == "low")$Longtitude,
color = "Low Price",
marker = list(color = "darkgreen"),
hoverinfo = "text",
hovertext = filter(df.mel, PriceCategory == "low")$HoverText,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
)
p
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scatterplot",
lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = ~PriceCategory,
mode = "markers",
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory, dynamic = TRUE) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers",
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
?highlight_key
?highlight
df.mel %>%
highlight(~PriceCategory, ) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers",
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(color = "darkgreen"),
mode = "markers",
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers",
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = ~PriceCategory,
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(PriceCategory),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(df.mel$PriceCategory),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(color = df.mel$PriceCategory),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(color = "red"),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(color = "dark green"),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(color = df.mel$MarkerColor),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
color = c("Low Price","Medium Low Price",
"Medium High Price","high Price"),
marker = list(color = df.mel$MarkerColor),
mode = "markers"
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
df.mel %>%
highlight_key(~PriceCategory) %>%
plot_ly(type = "scattermapbox",
lat = ~Lattitude,
lon = ~Longtitude,
marker = list(color = df.mel$MarkerColor),
mode = "markers",
hovertext = ~HoverText
) %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
) %>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
require(devtools)
install_github("slidify","ramnathv")
install_github("slidify", "ramnathv")
library(devtools)
install_github('slidify', 'ramnathv')
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install_github('ramnathv/slidify')
install_github("ramnathv/slidifyLibraries")
library("slidify")
library(slidify)
library(slidifyLibraries)
install.packages(c("dplyr", "jsonlite", "knitr", "tidyselect", "XML"))
rm(list = ls())
library(slidify)
install_version("stringr", version="0.6.2")
library(devtools)
install_version("stringr", version="0.6.2")
fixInNamespace("init_repo", "slidify")
rm(list = ls())
shiny::runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
runApp()
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
runApp()
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
runApp()
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
unique(df.mel$Type)
c.option("All", unique(df.mel$Type))
c.option("All", unique(as.character(df.mel$Type)))
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
shiny::runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
cut(df.mel$Price,
breaks = quantile(df.mel$Price))
quantile(df.mel$Price)
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
quantile(df.mel$Price)
runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
library(slidify)
install.packages("C:/Users/pacor/Desktop/Paolo/slidify_0.3.1.zip", repos = NULL, type = "win.binary")
library(slidify)
getwd()
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs, force = TRUE)
shiny::runApp('ShinyProjects/009Grid/TestGrid2/Tabs')
getwd()
rm(list = ls())
setwd('C:/Users/pacor/Desktop/Paolo/WIP/Coursera/09_Developing_Data_Products-master/GIT/Week4Assignment/Presentation/MelbourneHousePricesMap')
getwd()
library(dplyr)
df.mel <- read.csv("./Data/Melbourne_housing_FULL.csv")
df.mel <- df.mel[which(!is.na(df.mel$Lattitude) &
!is.na(df.mel$Price) &
!is.na(df.mel$Bathroom)),]
# df1_FULL <- df1_FULL[which(!is.na(df1_FULL$Lattitude) &
#                                !is.na(df1_FULL$Price) &
#                                !is.na(df1_FULL$Bathroom)),]
df.mel$PriceCategory <-cut(df.mel$Price,
breaks = quantile(df.mel$Price),
labels = c("low", "medium low", "medium high", "high"))
df.mel$MarkerColor <-cut(df.mel$Price,
breaks = quantile(df.mel$Price),
labels = c("darkgreen", "green", "red", "darkred"))
residency.type <- function(ttype)
{
if (ttype == "h")
{
return("House Cottage Villa")
}else if (ttype == "u")
{
return("Unit Duplex")
}else
{
return("Town house")
}
df.mel$HoverText <- with(df.mel, paste('<b>Price:</b>', Price,
'<br>', "Council: ", CouncilArea,
'<br>', "Region: ", Regionname,
'<br>', "# Rooms: ", Rooms,  " # Bathrooms: ", Bathroom,
'<br>', "Type", lapply(Type,residency.type)))
save(df.mel, file = 'dfmel.Rdata')
require(plotly)
load("dfmel.Rdata")
median(df.mel$Lattitude); median(df.mel$Longtitude)
plot_ly(df.mel, type = "scattermapbox") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
)
library(plotly)
load("dfmel.Rdata")
print(getwd())
plot_ly(df.mel, type = "scattermapbox") %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom =9.5,
center = list(lon = mean(df.mel$Longtitude),
lat = mean(df.mel$Lattitude)))
)
library(slidify)
slidify("index.Rmd")
webshot::install_phantomjs()
