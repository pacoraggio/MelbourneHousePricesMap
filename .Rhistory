font = list(color = 'white', size = 12)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 12)
)) %>%
add_trace(data = df.melPres, y = ~Price,
type = "box", name = as.character(unique(df.melPres$Regionname))) %>%
add_trace(data = df.mel1$Price, name = "All region")
t
subplot(t,p)
subplot(t,p, nrows = 2)
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
p
subplot(t,p, nrows = 1,
xaxis = list(domain=list(x=c(0,0.5),y=c(0,0.5))))
subplot(t,p, nrows = 1,
xaxis = list(domain=list(x=c(0,0.5),y=c(0,0.5))))
p
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan")
subplot(t,p, nrows = 1,
xaxis = list(domain=list(x=c(0,0.5),y=c(0,0.5))))
subplot(t,p, nrows = 1)
p
subplot(t,p, nrows = 1)
subplot(t, nrows = 1)
t <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 12)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 12)
))
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
subplot(t, p, nrows = 1)
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(0,0.5),y=c(0,0.5))))
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(0,2.5),y=c(0,0.5))))
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(0,2.5),y=c(0,2.5))))
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(0,2.5),y=c(2,2.5))))
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(0,0.5),y=c(2,2.5))))
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(0,0.0),y=c(2,2.5))))
subplot(t, p, nrows = 1,
axis = list(domain=list(x=c(12,0.0),y=c(2,2.5))))
subplot(t, p, nrows = 1,
xaxis = list(domain=list(x=c(12,0.0),y=c(2,2.5))))
subplot(t, p, nrows = 1,
xaxis = list(domain=list(x=c(0,0.0),y=c(2,2.5))))
subplot(t, p, nrows = 1,
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis = list(domain=list(x=c(0,0.0),y=c(2,2.5))))
subplot(t, p, nrows = 1,
scene = list(domain=list(x=c(0.5,1),y=c(0,2.5))),
xaxis = list(domain=list(x=c(0,0.0),y=c(2,2.5))))
subplot(t, p, nrows = 1) %>%
layout(title = "Ambarabacci",
xaxis = list(domain=list(x=c(0,0.5),y=c(0,0.5))))
subplot(t, p, nrows = 1) %>%
layout(title = "Ambarabacci",
xaxis = list(domain=list(x=c(0,2.5),y=c(0,2.5))))
subplot(t, p, nrows = 1) %>%
layout(title = "Ambarabacci",
xaxis = list(domain=list(x=c(0,2.5),y=c(9,2.5))))
subplot(t, p, nrows = 1) %>%
layout(title = "Ambarabacci",
xaxis = list(domain=list(x=c(1,2.5),y=c(9,2.5))))
subplot(t, p, nrows = 1) %>%
layout(title = "Ambarabacci",
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis = list(domain=list(x=c(1,2.5),y=c(9,2.5))))
subplot(t, p, nrows = 1) %>%
layout(title = "Ambarabacci",
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 2) %>%
layout(title = "Ambarabacci",
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 2) %>%
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 2) %>%
layout(
scene = list(domain=list(x=c(0.5,1),y=c(0,0.5))),
xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 3) %>%
layout(xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 2) %>%
layout(xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 1) %>%
layout(xaxis = list(domain=list(x=c(1,2.5),y=c(90,20.5))))
subplot(t, p, nrows = 2, heights = c(0.2, 0.8), widths = c(0.8, 0.2), margin = 0)
subplot(t, p, nrows = 2,
heights = c(0.2, 0.8),
widths = c(0.8, 0.2),
margin = 0,
shareX = TRUE, shareY = TRUE)
t
p
subplot(t, p, nrows = 2,
heights = c(0.2, 0.8),
widths = c(0.8, 0.2),
#        margin = 0,
shareX = TRUE, shareY = TRUE)
subplot(t, p, nrows = 1,
heights = c(0.2, 0.8),
widths = c(0.8, 0.2),
#        margin = 0,
shareX = TRUE, shareY = TRUE)
subplot(t, p, nrows = 2,
heights = c(0.2, 0.8),
widths = c(0.8, 0.2),
#        margin = 0,
shareX = TRUE, shareY = TRUE)
fluidPage(
fluidRow(
column(6,p),
column(6,t)
)
library(shiny)
fluidPage(
fluidRow(
column(6,p),
column(6,t)
)
library(shiny)
p <- plot_ly(x = rnorm(100))
fluidPage(
fluidRow(p),
fluidRow(
column(6, p), column(6, p)
)
p <- plot_ly(x = rnorm(100))
# NOTE: you don't need browsable() in rmarkdown,
# but you do at the R prompt
browsable(div(
style = "display: flex; flex-wrap: wrap; justify-content: center",
div(p, style = "width: 40%; border: solid;"),
div(p, style = "width: 100%; border: solid;")
))
library(htmltools)
p <- plot_ly(x = rnorm(100))
# NOTE: you don't need browsable() in rmarkdown,
# but you do at the R prompt
browsable(div(
style = "display: flex; flex-wrap: wrap; justify-content: center",
div(p, style = "width: 40%; border: solid;"),
div(p, style = "width: 100%; border: solid;")
))
browsable(div(
style = "display: flex; flex-wrap: wrap; justify-content: center",
div(p, style = "width: 50%; border: solid;"),
div(t, style = "width: 50%; border: solid;"),
))
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
p
browsable(div(
style = "display: flex; flex-wrap: wrap; justify-content: center",
div(t, style = "width: 40%; border: solid;"),
div(p, style = "width: 40%; border: solid;"),
))
tp <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 8)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 8)
)) %>%
layout(yaxis =
list(title = 'Text Summary'),
xaxis = list(domain = c(0, 0.5))) %>%
add_trace(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region")
tp
tp <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 8)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 8)
)) %>%
layout(yaxis =
list(title = 'Text Summary'),
xaxis = list(domain = c(0, 0.5))) %>%
add_trace(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
tp
tp <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 8)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 8)
)) %>%
layout(xaxis = list(domain = c(0, 0.5))) %>%
add_trace(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
tp
p1 <- plot_ly(economics, x = ~date, y = ~unemploy) %>%
add_lines(name = ~"unemploy")
p2 <- plot_ly(economics, x = ~date, y = ~uempmed) %>%
add_lines(name = ~"uempmed")
p3 <- subplot(p1, p2)
p3
p3 <- subplot(p, p2)
p3
p3 <- subplot(t, p2)
p3
p1 <- plot_ly(economics, x = ~date, y = ~unemploy) %>%
add_lines(name = ~"unemploy")
p2 <- plot_ly(economics, x = ~date, y = ~uempmed) %>%
add_lines(name = ~"uempmed")
p3 <- subplot(t, p2, shareY = FALSE)
p3
p3 <- subplot(t, p2, shareY = FALSE, shareX = FALSE)
p3
p3 <- subplot(t, p2, shareY = FALSE, shareX = FALSE,
margin = 4)
p3
p3 <- subplot(t, p2, shareY = FALSE, shareX = FALSE,
margin = 0.4)
p3
p3 <- subplot(t, p2, nrows = 2, shareY = FALSE, shareX = FALSE,
margin = 0.4)
p3
p1 <- plot_ly(economics, x = ~date, y = ~unemploy) %>%
add_lines(name = ~"unemploy")
p2 <- plot_ly(economics, x = ~date, y = ~uempmed) %>%
add_lines(name = ~"uempmed")
p3 <- subplot(t, p2, nrows = 2, shareY = FALSE, shareX = FALSE)
p3
row.values <- c("Matches","Mean ($)", "SD ($)")
t <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 6)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 6)
))
a1 <- '<b>Summary</b><br>Region'
a2 <- '<b>Summary</b><br>All regions'
row.values <- c("Matches","Mean ($)", "SD ($)")
t <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 6)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 6)
))
p3 <- subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
p3
dim(df.mel1)
dim(df.mel)
df.mel1 <- df.mel[which(df.mel$Rooms %in% rrooms &
df.mel$Bathroom %in% bbathrooms &
df.mel$Type %in% ttype),]
dim(df.mel1)
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y, showlegend = FALSE)
p3 <- subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
p3
row.values <- c("Matches","Mean Price ($)", "Standard Dev ($)")
a1 <- paste('<b>Summary</b><br>', as.character(unique(df.melPres$Regionname)))
t <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 8)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 8)
))
p3 <- subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
p3
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y)
subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
all.stat <- c(round(nrow(df.mel1),0),
round(mean(df.mel1$Price),0),
round(sd(df.mel1$Price),0))
t <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 8)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 8)
))
p3 <- subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
p3
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y, showlegend = FALSE)
p3 <- subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
p3
rm(list = ls())
library(plotly)
load("dfmelPres.Rdata")
load("dfmel.Rdata")
y <- list(
title = "Residency Price"
)
rrooms <- 3
bbathrooms <- 2
ttype <- "h"
df.mel1 <- df.mel[which(df.mel$Rooms %in% rrooms &
df.mel$Bathroom %in% bbathrooms &
df.mel$Type %in% ttype),]
unique(df.mel1$Regionname)
rm(list = ls())
library(plotly)
load("dfmel.Rdata")
y <- list(
title = "Residency Price"
)
rrooms <- 3
bbathrooms <- 2
ttype <- "h"
region <- "Southern Metropolitan"
df.mel1 <- df.mel[which(df.mel$Rooms %in% rrooms &
df.mel$Bathroom %in% bbathrooms &
df.mel$Type %in% ttype),]
df.melPres <- df.mel[which(df.mel$Rooms %in% rrooms &
df.mel$Bathroom %in% bbathrooms &
df.mel$Type %in% ttype &
df.mel$Regionname %in% region),]
as.character(unique(df.melPres$Regionname))
a1 <- paste('<b>Summary</b><br>', as.character(unique(df.melPres$Regionname)))
a2 <- '<b>Summary</b><br>All regions'
row.values <- c("Matches","Mean Price ($)", "Standard Dev ($)")
region.stat <- c(round(nrow(df.melPres),0),
round(mean(df.melPres$Price),0),
round(sd(df.melPres$Price),0))
all.stat <- c(round(nrow(df.mel1),0),
round(mean(df.mel1$Price),0),
round(sd(df.mel1$Price),0))
t <- plot_ly(
type = 'table',
header = list(
values = c('', a1,a2),
line = list(color = '#506784'),
fill = list(color = '#119DFF'),
align = c('left','center'),
font = list(color = 'white', size = 8)
),
cells = list(
values = rbind(
row.values,
region.stat,
all.stat),
line = list(color = '#506784'),
fill = list(color = c('#25FEFD', 'white')),
align = c('left', 'center'),
font = list(color = c('#506784'), size = 8)
))
p <- plot_ly(y = ~df.melPres$Price,
type = "box",
name = "Southern Metropolitan") %>%
add_trace(y = ~df.mel1$Price,
name = "All region") %>%
layout(yaxis = y, showlegend = FALSE)
tp <- subplot(t, p, nrows = 2, shareY = FALSE, shareX = FALSE)
tp
